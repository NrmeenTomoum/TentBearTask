//
//  HomeInteractor.swift
//  TentBearTask
//
//  Created by Nrmeen Tomoum on 09/01/2020.
//  Copyright (c) 2020 Nermeen. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic
{
    func getListOfUsers()
}

protocol HomeDataStore
{
    var users: [Home.Users.Response]? { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore
{
    var users: [Home.Users.Response]?
    
    var presenter: HomePresentationLogic?
    var worker: HomeWorker?
    
    // MARK: Do something
    
    func getListOfUsers()
    {
        worker = HomeWorker()
        self.presenter?.presentLoader()
        worker?.getListOfUsers(completionHandler: { (respond, errorCode) in
            self.presenter?.stopLoader()
            if let response = respond
            {
                self.users = response.data
                for user in self.users ?? [] {
                    DBManger.save(user: user)
                }
                self.presenter?.presentListOfUsers(response: response.data!)
            }
            else if let error = errorCode
            {
                
                self.presenter?.presentAlertMessage(message: (error.rawValue))
            }
            
        })
        
        //    let response = Home.Something.Response()
        //    presenter?.presentSomething(response: response)
    }
}
