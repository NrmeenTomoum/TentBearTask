//
//  HomeViewController.swift
//  TentBearTask
//
//  Created by Nrmeen Tomoum on 09/01/2020.
//  Copyright (c) 2020 Nermeen. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeDisplayLogic: class
{
  func displayListOfUsers(viewModel: Home.Users.ViewModel)
    func displayIndecator()
       func stopIndecator()
        func createAlert(title: String, subTitle: String)
}

class HomeViewController: UIViewController, HomeDisplayLogic
{
  
  var interactor: HomeBusinessLogic?
  var router: (NSObjectProtocol & HomeRoutingLogic & HomeDataPassing)?
 var viewIndecator = loader ()
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = HomeInteractor()
    let presenter = HomePresenter()
    let router = HomeRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    getListOfUsers()
  }
  
  // MARK: Do something
  func createAlert(title: String, subTitle: String) {
       CAlert.createAlert(title: title, subTitle: subTitle,vc: self)
  }
  
  func displayIndecator()
  {
       viewIndecator.startIndecator(self.view)
  }
  func stopIndecator()
  {
      viewIndecator.stopIndecator(self.view)
   }
  //@IBOutlet weak var nameTextField: UITextField!
  
func displayListOfUsers(viewModel: Home.Users.ViewModel) {
          
      }
      
  func getListOfUsers()
  {
     interactor?.getListOfUsers()
  }
  
  func displaySomething(viewModel: Home.Users.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
}
